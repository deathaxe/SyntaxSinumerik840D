{
  "scope": "meta.block.network.plc.awl - meta.operand - meta.function-call",
  "completions": [
    // manipulate VKE
    {"trigger": "CLR\tset VKE = 0",            "contents": "CLR   ;\n$0"},
    {"trigger": "SET\tset VKE = 1",            "contents": "SET   ;\n$0"},
    {"trigger": "NOT\tnegate VKE",             "contents": "NOT   ;\n$0"},
    {"trigger": "SAVE\tcopy VKE to BIE",       "contents": "SAVE  ;\n$0"},

    // bit logic
    {"trigger": "U    <sym>\tlogic",           "contents": "U     ${1:operand};\n$0"},
    {"trigger": "UN   <sym>\tlogic",           "contents": "UN    ${1:operand};\n$0"},
    {"trigger": "O\tlogic",                    "contents": "O     ;\n$0"},
    {"trigger": "O    <sym>\tlogic",           "contents": "O     ${1:operand};\n$0"},
    {"trigger": "ON   <sym>\tlogic",           "contents": "ON    ${1:operand};\n$0"},
    {"trigger": "X    <sym>\tlogic",           "contents": "X     ${1:operand};\n$0"},
    {"trigger": "XN   <sym>\tlogic",           "contents": "XN    ${1:operand};\n$0"},

    // bit logic
    {"trigger": "U(\tlogic",                   "contents": "U(    ;\n$0\n)     ;"},
    {"trigger": "UN(\tlogic",                  "contents": "UN(   ;\n$0\n)     ;"},
    {"trigger": "O(\tlogic",                   "contents": "O(    ;\n$0\n)     ;"},
    {"trigger": "ON(\tlogic",                  "contents": "ON(   ;\n$0\n)     ;"},
    {"trigger": "X(\tlogic",                   "contents": "X(    ;\n$0\n)     ;"},
    {"trigger": "XN(\tlogic",                  "contents": "XN(   ;\n$0\n)     ;"},

    // assignment
    {"trigger": "N    <sym>\tlogic",           "contents": "=     ${1:operand};\n$0"},
    {"trigger": "S    <sym>\tlogic",           "contents": "S     ${1:operand};\n$0"},
    {"trigger": "R    <sym>\tlogic",           "contents": "R     ${1:operand};\n$0"},

    // counter
    {"trigger": "ZV   <cnt>\tcounter",         "contents": "ZV    ${1:Z0};\n$0"},
    {"trigger": "ZR   <cnt>\tcounter",         "contents": "ZR    ${1:Z0};\n$0"},
    {"trigger": "FR   <cnt>\tcounter",         "contents": "FR    ${1:Z0};\n$0"},
    {"trigger": "LC   <cnt>\tcounter",         "contents": "LC    ${1:Z0};\n$0"},

    // timer
    {"trigger": "SA   <tmr>\ttimer",           "contents": "SA    ${1:T0};\n$0"},
    {"trigger": "SE   <tmr>\ttimer",           "contents": "SE    ${1:T0};\n$0"},
    {"trigger": "SI   <tmr>\ttimer",           "contents": "SI    ${1:T0};\n$0"},
    {"trigger": "SS   <tmr>\ttimer",           "contents": "SS    ${1:T0};\n$0"},
    {"trigger": "SV   <tmr>\ttimer",           "contents": "SV    ${1:T0};\n$0"},

    // AKKU operations
    {"trigger": "L    <sym>\tload to AKKU1",   "contents": "L     ${1:operand};\n$0"},
    {"trigger": "T    <sym>\tsave AKKU1",      "contents": "T     ${1:operand};\n$0"},
    {"trigger": "PUSH\tcopy AKKU1 to AKKU2",   "contents": "PUSH  ;\n$0"},
    {"trigger": "POP\tcopy AKKU2 to AKKU1",    "contents": "POP   ;\n$0"},
    {"trigger": "TAK\tswap AKKU2 to AKKU1",    "contents": "TAK   ;\n$0"},

    // 16bit binary operators
    {"trigger": "UW\t16bit binary",            "contents": "UW    ;\n$0"},
    {"trigger": "UW   <const>\t16bit binary",  "contents": "UW    W#16#${1:0};\n$0"},
    {"trigger": "OW\t16bit binary",            "contents": "OW    ;\n$0"},
    {"trigger": "OW   <const>\t16bit binary",  "contents": "OW    W#16#${1:0};\n$0"},
    {"trigger": "SLW\t16bit binary",           "contents": "SLW   ;\n$0"},
    {"trigger": "SLW  <const>\t16bit binary",  "contents": "SLW   ${1:1};\n$0"},
    {"trigger": "SRW\t16bit binary",           "contents": "SRW   ;\n$0"},
    {"trigger": "SRW  <const>\t16bit binary",  "contents": "SRW   ${1:1};\n$0"},
    {"trigger": "TAW\t16bit binary",           "contents": "TAW   ;\n$0"},
    {"trigger": "INVI\t16bit binary",          "contents": "INVI  ;\n$0"},
    {"trigger": "NEGI\t16bit binary",          "contents": "NEGI  ;\n$0"},

    // 32bit binary operators
    {"trigger": "UD\t32bit binary",            "contents": "UD    ;\n$0"},
    {"trigger": "UD   <const>\t32bit binary",  "contents": "UD    DW#16#${1:0};\n$0"},
    {"trigger": "OD\t32bit binary",            "contents": "OD    ;\n$0"},
    {"trigger": "OD   <const>\t32bit binary",  "contents": "OD    DW#16#${1:0};\n$0"},
    {"trigger": "SLD\t32bit binary",           "contents": "SLD   ;\n$0"},
    {"trigger": "SLD  <const>\t32bit binary",  "contents": "SLD   ${1:1};\n$0"},
    {"trigger": "SRD\t32bit binary",           "contents": "SRD   ;\n$0"},
    {"trigger": "SRD  <const>\t32bit binary",  "contents": "SRD   ${1:1};\n$0"},
    {"trigger": "TAD\t32bit binary",           "contents": "TAD   ;\n$0"},
    {"trigger": "INVD\t32bit binary",          "contents": "INVD  ;\n$0"},
    {"trigger": "NEGD\t32bit binary",          "contents": "NEGD  ;\n$0"},

    // datablock
    {"trigger": "AUF  <sym>\tdatablock",       "contents": "AUF   ${1:operand};\n$0"},
    {"trigger": "TDB\tdatablock",              "contents": "TDB   ;\n$0"},

    // address register 1
    {"trigger": "LAR1\tAR1",                   "contents": "LAR1  ;\n$0"},
    {"trigger": "LAR1 <ptr>\tAR1",             "contents": "LAR1  P#${1:0.0};\n$0"},
    {"trigger": "TAR1\tAR1",                   "contents": "TAR1  ;\n$0"},
    {"trigger": "AR1\tAR1",                    "contents": "+AR1  ;\n$0"},
    {"trigger": "AR1  <ptr>\tAR1",             "contents": "+AR1  P#${1:0.0};\n$0"},

    // address register 2
    {"trigger": "LAR2\tAR2",                   "contents": "LAR2  ;\n$0"},
    {"trigger": "LAR2 <ptr>\tAR2",             "contents": "LAR2  P#${1:0.0};\n$0"},
    {"trigger": "TAR2\tAR2",                   "contents": "TAR2  ;\n$0"},
    {"trigger": "AR2\tAR2",                    "contents": "+AR2  ;\n$0"},
    {"trigger": "AR2  <ptr>\tAR2",             "contents": "+AR2  P#${1:0.0};\n$0"},

    // goto
    {"trigger": "SPL\tif case goto",               "contents": "SPL   ${1:_001};\n$0"},
    {"trigger": "SPA\tif always goto",             "contents": "SPA   ${1:_001};\n$0"},
    {"trigger": "SPB\tif VKE = 1 goto",            "contents": "SPB   ${1:_001};\n$0"},
    {"trigger": "SPBN\tif VKE = 0 goto",           "contents": "SPBN  ${1:_001};\n$0"},
    {"trigger": "SPBB\tif VKE = 1, VKE->BIE goto", "contents": "SPBB  ${1:_001};\n$0"},
    {"trigger": "SPBNB\tif VKE = 0, VKE->BIE goto","contents": "SPBNB ${1:_001};\n$0"},
    {"trigger": "SPBIN\tif BIE = 0 goto",          "contents": "SPBIN ${1:_001};\n$0"},
    {"trigger": "SPBI\tif BIE = 1 goto",           "contents": "SPBI  ${1:_001};\n$0"},
    {"trigger": "SPO\tif OV = 1 goto",             "contents": "SPO   ${1:_001};\n$0"},
    {"trigger": "SPS\tif OS = 1 goto",             "contents": "SPS   ${1:_001};\n$0"},
    {"trigger": "SPZ\tif result = 0 goto",         "contents": "SPZ   ${1:_001};\n$0"},
    {"trigger": "SPN\tif result <> 0 goto",        "contents": "SPN   ${1:_001};\n$0"},
    {"trigger": "SPP\tif result > 0 goto",         "contents": "SPP   ${1:_001};\n$0"},
    {"trigger": "SPM\tif result < 0 goto",         "contents": "SPM   ${1:_001};\n$0"},
    {"trigger": "SPPZ\tif result >= 0 goto",       "contents": "SPPZ  ${1:_001};\n$0"},
    {"trigger": "SPMZ\tif result <= 0 goto",       "contents": "SPMZ  ${1:_001};\n$0"},
    {"trigger": "SPU\tif result invalid goto",     "contents": "SPU   ${1:_001};\n$0"},

    // function calls
    {"trigger": "UC    <sym>\trun",                "contents": "UC    ${1:fc};\n$0"},
    {"trigger": "CC    <sym>\trun",                "contents": "CC    ${1:fc};\n$0"},
    {"trigger": "CALL  <fc>\trun",                 "contents": "CALL  ${1:fc} (\n\t$0);\n"},
    {"trigger": "CALL  <fb>, <db>\trun",           "contents": "CALL  ${1:fb}, ${1:db};\n$0"},

    // block end
    {"trigger": "BE\tblock end",                   "contents": "BE    ;\n$0"},
    {"trigger": "BEA\tblock end",                  "contents": "BEA   ;\n$0"},
  ]
}
